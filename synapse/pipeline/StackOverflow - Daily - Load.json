{
	"name": "StackOverflow - Daily - Load",
	"properties": {
		"activities": [
			{
				"name": "Copy - StackOverflow",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Web - KeyVault Secret",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "LKP - Last Date",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 60,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"QueryParameters['urlquery']": "$.nextLink"
						}
					},
					"sink": {
						"type": "JsonSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "JsonWriteSettings",
							"filePattern": "setOfObjects"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "RestStackOverflow",
						"type": "DatasetReference",
						"parameters": {
							"UrlQuery": {
								"value": "@replace(\n\treplace(\n\t\treplace(\n\t\t\treplace(\n\t\t\t\treplace(\n\t\t\t\t\tpipeline().parameters.UrlQuery\n\t\t\t\t\t,'{filter}'\n\t\t\t\t\t,pipeline().parameters.Filter\n\t\t\t\t)\n\t\t\t,'{key}'\n\t\t\t,json(activity('Web - KeyVault Secret').output.value).key\n\t\t\t)\n\t\t,'{access_token}'\n\t\t,json(activity('Web - KeyVault Secret').output.value).access_token\n\t\t)\n\t,'{date}'\n\t,activity('LKP - Last Date').output.firstRow.LastPostDate\n\t)\n,'{object}'\n,pipeline().parameters.Object\n)",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "Http2JsonBinary",
						"type": "DatasetReference",
						"parameters": {
							"FileName": {
								"value": "@{pipeline().parameters.Object}/@{formatDateTime(utcnow(),'yyyyMMdd')}/@{formatDateTime(utcnow(),'hh-mm')}.json",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Web - KeyVault Secret",
				"type": "WebActivity",
				"dependsOn": [],
				"policy": {
					"timeout": "0.00:01:00",
					"retry": 3,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": "https://akv-app.vault.azure.net/secrets/StackOverflow-api?api-version=7.0",
					"connectVia": {
						"referenceName": "AutoResolveIntegrationRuntime",
						"type": "IntegrationRuntimeReference"
					},
					"method": "GET",
					"authentication": {
						"type": "MSI",
						"resource": "https://vault.azure.net"
					}
				}
			},
			{
				"name": "LKP - Last Date",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.01:00:00",
					"retry": 3,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlDWSource",
						"sqlReaderQuery": {
							"value": "@pipeline().parameters.MaxDateQuery",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "SQLOD_StackOverflowDwh_Generic",
						"type": "DatasetReference"
					}
				}
			}
		],
		"parameters": {
			"UrlQuery": {
				"type": "string",
				"defaultValue": "https://api.stackexchange.com/2.3/posts?order=desc&sort=activity&site=stackoverflow&key={key}&access_token={access_token}&filter={filter}&pagesize=100&page=1&fromdate={date}"
			},
			"Filter": {
				"type": "string",
				"defaultValue": "!szxl1GZm4qbFlUGgI0mO90EuDDF)HfQ"
			},
			"MaxDateQuery": {
				"type": "string",
				"defaultValue": "SELECT [LastPostDate] = CAST(DATEDIFF(SECOND, '1970-01-01',MAX([CreationDateTime])) AS VARCHAR)   FROM [dwh].[Posts]"
			},
			"Object": {
				"type": "string"
			}
		},
		"folder": {
			"name": "Daily"
		},
		"annotations": []
	}
}