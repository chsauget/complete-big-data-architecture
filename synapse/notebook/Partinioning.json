{
	"name": "Notebook 1",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2"
			}
		},
		"metadata": {
			"saveOutput": true,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "python"
			},
			"language_info": {
				"name": "python"
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"df = spark.read.load('abfss://lake@synapselakeapp.dfs.core.windows.net/Full/dbo.Posts.parquet', format='parquet')\r\n",
					"display(df.limit(10))"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"from pyspark.sql.functions import year, month, dayofmonth, hour, minute, second\r\n",
					"df_final = df.withColumn(\"year\", year(df[\"CreationDate\"])) \\\r\n",
					"                .withColumn(\"month\", month(df[\"CreationDate\"])) \\\r\n",
					"                .withColumn(\"day\", dayofmonth(df[\"CreationDate\"]))\r\n",
					"\r\n",
					"\r\n",
					"df_final.write.partitionBy(\"year\",\"month\",\"day\").mode(\"overwrite\").parquet(\"abfss://lake@synapselakeapp.dfs.core.windows.net/Partitioned/Posts\")"
				],
				"execution_count": null
			}
		]
	}
}