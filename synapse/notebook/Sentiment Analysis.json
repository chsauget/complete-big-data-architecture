{
	"name": "Sentiment Analysis",
	"properties": {
		"folder": {
			"name": "NLP"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "spark",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 7,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "7",
				"spark.dynamicAllocation.maxExecutors": "7"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/c24ef419-76bf-4265-bb0d-e3e3f3086be2/resourceGroups/complete-big-data-architecture/providers/Microsoft.Synapse/workspaces/synapse-app/bigDataPools/spark",
				"name": "spark",
				"type": "Spark",
				"endpoint": "https://synapse-app.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/spark",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "2.4",
				"nodeCount": 3,
				"cores": 8,
				"memory": 56,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from pyspark.sql.functions import *\r\n",
					"\r\n",
					"# Load the data into a Spark DataFrame\r\n",
					"df = spark.sql(\"SELECT * FROM SparkDwh.Posts\")\r\n",
					"\r\n",
					"dfClean = df.withColumn(\"cleanBody\",regexp_replace(df[\"body\"], \"<[^>]*>\", \"\"))\r\n",
					"\r\n",
					"display(dfClean,True)"
				],
				"execution_count": 17
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"from mmlspark.cognitive import *\r\n",
					"from notebookutils import mssparkutils\r\n",
					"from pyspark.sql.functions import explode\r\n",
					"\r\n",
					"# Fetch the subscription key (or a general Cognitive Service key) from Azure Key Vault\r\n",
					"service_key = mssparkutils.credentials.getSecret(\"akv-app\", \"cognitive-key\", \"akv_app\")\r\n",
					"\r\n",
					"\r\n",
					"\r\n",
					"sentiment = (TextSentiment()\r\n",
					"    .setLocation(\"northeurope\")\r\n",
					"    .setSubscriptionKey(service_key)\r\n",
					"    .setOutputCol(\"output\")\r\n",
					"    .setErrorCol(\"error\")\r\n",
					"    .setLanguage(\"en\")\r\n",
					"    .setTextCol(\"Body\"))\r\n",
					"\r\n",
					"results = sentiment.transform(df)\r\n",
					"\r\n",
					"final = results\\\r\n",
					"    .select(\"Body\",\"id\", explode(\"output\").alias(\"exploded\"), \"error\")\\\r\n",
					"    .select(\"Body\",\"id\", \"exploded.*\", \"error\")\\\r\n",
					"    .limit(100)\r\n",
					"# Show the results\r\n",
					"display(final)\r\n",
					"\r\n",
					""
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": true
				},
				"source": [
					"%%sql\r\n",
					"DROP TABLE IF EXISTS PostsWithSentiments\r\n",
					""
				],
				"execution_count": 23
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"final.write.saveAsTable(\"PostsWithSentiments\");"
				],
				"execution_count": 26
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"from mmlspark.cognitive.KeyPhraseExtractorV2 import *\r\n",
					"\r\n",
					"summarize = (KeyPhraseExtractorV2().setLocation(\"northeurope\")\r\n",
					"    .setSubscriptionKey(service_key)\r\n",
					"    .setOutputCol(\"output\")\r\n",
					"    .setErrorCol(\"error\")\r\n",
					"    .setLanguage(\"en\")\r\n",
					"    .setTextCol(\"Body\"))\r\n",
					"r = summarize.transform(df)\r\n",
					"\r\n",
					"final = r\\\r\n",
					"    .select(\"Body\",\"id\", explode(\"output\").alias(\"exploded\"), \"error\")\\\r\n",
					"    .select(\"Body\",\"id\", \"exploded.*\", \"error\")\\\r\n",
					"    .limit(100)\r\n",
					"# Show the results\r\n",
					"display(final)\r\n",
					""
				],
				"execution_count": 8
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					""
				],
				"execution_count": 16
			}
		]
	}
}