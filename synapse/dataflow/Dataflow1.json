{
	"name": "Dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "synapse-app-WorkspaceDefaultStorage",
						"type": "LinkedServiceReference"
					},
					"name": "SrcBadgesXML"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "synapse-app-WorkspaceDefaultStorage",
						"type": "LinkedServiceReference"
					},
					"name": "SinkParquet"
				}
			],
			"transformations": [
				{
					"name": "FlattenXml2Table"
				}
			],
			"script": "source(output(\n\t\tbadges as (row as ({@Class} as short, {@Date} as string, {@Id} as integer, {@Name} as string, {@TagBased} as boolean, {@UserId} as short)[])\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'xml',\n\tfileSystem: 'lake',\n\tfolderPath: 'StackOverflow/sample',\n\tfileName: 'Badges-sample.xml',\n\tvalidationMode: 'none',\n\tnamespaces: true) ~> SrcBadgesXML\nSrcBadgesXML foldDown(unroll(badges.row, badges.row),\n\tmapColumn(\n\t\tClass = badges.row.{@Class},\n\t\tDate = badges.row.{@Date},\n\t\tId = badges.row.{@Id},\n\t\tName = badges.row.{@Name},\n\t\tTagBased = badges.row.{@TagBased},\n\t\tUserId = badges.row.{@UserId}\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenXml2Table\nFlattenXml2Table sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tfileSystem: 'lake',\n\tfolderPath: 'StackOverflow/parquet/Badges',\n\tcompressionCodec: 'snappy',\n\tumask: 0022,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SinkParquet"
		}
	}
}